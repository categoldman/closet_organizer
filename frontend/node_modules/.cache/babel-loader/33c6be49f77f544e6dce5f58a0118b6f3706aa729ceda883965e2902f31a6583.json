{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\n\n// Set default base URL\naxios.defaults.baseURL = config.apiUrl;\n\n// Add request interceptor\naxios.interceptors.request.use(config => {\n  // Get token from localStorage\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["axios","config","defaults","baseURL","apiUrl","interceptors","request","use","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["/Users/catherinegoldman/Documents/CascadeProjects/closetOrganizer/frontend/src/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\nimport config from './config';\n\n// Set default base URL\naxios.defaults.baseURL = config.apiUrl;\n\n// Add request interceptor\naxios.interceptors.request.use(\n  (config) => {\n    // Get token from localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACAD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGF,MAAM,CAACG,MAAM;;AAEtC;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BN,MAAM,IAAK;EACV;EACA,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTP,MAAM,CAACU,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOP,MAAM;AACf,CAAC,EACAY,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}